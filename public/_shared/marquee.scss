.marquee {
	background-color: black;
	height: 100vh;
	display:flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	overflow:hidden;
	
	
	& > div:first-of-type {
		display:none;
	}
	
	svg {
		position:relative;
		width:150px;
		height:auto;
		
		.st1, .st0 {
			fill: white !important;
		}	
	}
	
	.image {
		padding:0px;
		margin:0px;
		opacity:.3;
		top: 0px;
		bottom:0px;
		left:0px;
		right:0px;
		position: absolute;
		background-size:cover;
		background-position:center center;
		animation-duration: 20s;
	    animation-fill-mode: forwards;
	    animation-direction: alternate;
	    animation-iteration-count: infinite;
	    animation-name: kenB;
	}
	> div {	perspective: 500px;
		animation-duration: .4s;
		animation-timing-function: cubic-bezier(1,0,.3,1.5);
	    animation-fill-mode: forwards;
	    animation-iteration-count: once;
	    animation-name: pop;
	    animation-delay: .2s;}
	div.modal {
		overflow:hidden;
		text-align:center;
		position:relative;
		background-color: map-get($colors, white);
		padding:$base-padding*3;
		width:300px;
		margin-top: $base-padding*3;
	
	    & > div {backface-visibility: visible; position:absolute; opacity:0; transition: opacity 0s .15s linear; &#connect{ transform: rotateY(180deg);}}
	    &.connect{
		    transition:transform .3s linear;
		    transform: rotateY(180deg);
		    
		    transform-style: preserve-3d;
	    }
		&.sso #sso {position:relative; opacity:1;}
		&.connect #connect {position:relative; opacity:1;}
		svg {
			width:70%;
			position:static;
			padding-bottom: $base-padding;
			border-bottom: 1px solid map-get($colors, lightgray);
			
		}
		input[type="radio"] {
					display:none;
					+ label {
						display:inline-block;
						font-size: $small-font-size;
						white-space: nowrap;
						positon:relative;
						padding:$base-padding/3;
						border-bottom: 4px solid map-get($colors, black);
						cursor:pointer;
					}
					
					&:not(:checked) + label {
						border-color: transparent !important;
					}
				}
		label {.fa {
						margin-right: $base-padding/2;
					}}
					
		@for $i from 1 through 10 {
			input:nth-of-type(#{$i}):checked {
				& ~ .connectTabs li:nth-child(#{$i}) {
					position:relative;
					transform: scale(1);
					transition: transform .2s ease-in-out;
				}
			}
		}
		
		ul {
			padding:0px;
			margin:0px;
			list-style: none;
			text-align: left;
			
			li {
				a {
					display:block;
					text-decoration: none;
					color:map-get($colors, black);
					border: 1px solid map-get($colors, lightgray);
					padding: $base-padding*2;
					margin-bottom: $base-padding/2;
					
					&:hover {
						background-color: map-get($colors, lightgray);
					}
					
					span:first-child {
						margin-right:$base-padding/2;
					}
				}
			}
			
			&.connectTabs {
				display:flex;
				border-top: 1px solid map-get($colors, lightgray);
				flex-direction: column;
				justify-content: center;
				text-align: center;
				min-height:170px;
				margin-top:$base-padding;
				
				li {
					position: absolute;
					transform:scale(0);
					text-align: center;
					transition: transform 0s ease-in-out;
				}
				
				.spinner {
					position: absolute;
					left: 50%;
					margin-left:- $base-padding*2;
					display:inline-block;
					height:$base-padding*4;
					width:$base-padding*4;
					animation-duration: 1s;
					animation-timing-function:linear;
				    animation-fill-mode: forwards;
				    animation-iteration-count: infinite;
				    animation-name: spin;
				    border-radius:50%;
				    border:4px solid map-get($colors, black);
				    border-bottom-color:transparent;
				    top:0px;
				    margin-top:- $base-padding*4;
				}
				
				.fa {
					font-size: $h2-font-size;
					position:relative;
					margin-bottom:$base-padding;
				}
				
				span:not(.fa) {
					display:block;
					margin-bottom: $base-padding*2;
				}
			}
		}
	}
}

#connect {
	button {
		background: map-get($colors, black);
		border:none;
		color: map-get($colors, white);
	}
	
	button, input:not([type="radio"]) {
		width:100%;
		display:block;
		padding:$base-padding/2;
		margin-bottom:$base-padding;
	}
	
	.connectTabs li {
		& > .fa {display:block;}
		& > div {
			position:absolute;
			top:-100vh;
			transform:scale(0);
			opacity:0;
			transition:transform .2s ease-in-out;	
		}
		
		&.connecting .connecting{
			top:0px;
			position: relative;
			opacity:1;
			transform:scale(1);
		}
		
		&.connect .connect{
			top:0px;
			position: relative;
			opacity:1;
			transform:scale(1);
		}
		
		&.connected .connected{
			top:0px;
			position: relative;
			opacity:1;
			transform:scale(1);
		}
	}
}

@keyframes kenB {
  from {
    transform: scale(1.02) rotate(-.3deg);
  }
  to {
    transform: scale(1.15) rotate(1.5deg);
  }
}

@keyframes pop {
  from {
    transform: scale(.25);
    opacity:0;
  }
  to {
    transform: scale(1);
    opacity:1;
  }
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}